{"ast":null,"code":"export function emailValidator(control) {\n  // Regex pattern for basic email format validation\n  const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n  const valid = emailRegex.test(control.value);\n  if (!valid) {\n    return {\n      invalidEmail: true\n    };\n  }\n  // Additional validation to check for domain existence can be implemented here\n  return null;\n}","map":{"version":3,"names":["emailValidator","control","emailRegex","valid","test","value","invalidEmail"],"sources":["E:\\Angular\\SRH SBGI\\SRH\\src\\app\\services\\email-regex.ts"],"sourcesContent":["import { AbstractControl, ValidationErrors } from '@angular/forms';\r\n\r\nexport function emailValidator(control: AbstractControl): ValidationErrors | null {\r\n  // Regex pattern for basic email format validation\r\n  const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n  const valid = emailRegex.test(control.value);\r\n  if (!valid) {\r\n    return { invalidEmail: true };\r\n  }\r\n  // Additional validation to check for domain existence can be implemented here\r\n  return null;\r\n}"],"mappings":"AAEA,OAAM,SAAUA,cAAcA,CAACC,OAAwB;EACrD;EACA,MAAMC,UAAU,GAAG,kDAAkD;EACrE,MAAMC,KAAK,GAAGD,UAAU,CAACE,IAAI,CAACH,OAAO,CAACI,KAAK,CAAC;EAC5C,IAAI,CAACF,KAAK,EAAE;IACV,OAAO;MAAEG,YAAY,EAAE;IAAI,CAAE;;EAE/B;EACA,OAAO,IAAI;AACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}